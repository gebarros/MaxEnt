#!/usr/bin/perl -w
#This script manages the modules that calculates the Entropy Maximization and shows the Genomic Signature.
use strict;
use Getopt::Long;

#Giving the mandatory informations. 
my $help = 0 ; #Calls help for code execution options.
my $infile = ''; #Receives the file name of fasta sequence.
my $window_size = ''; #Receives the window size that user wants.
my $ID_sequence = ''; #Receives the identification of the sequence that will be used in the output file name.
my $n_nucleotides = ''; #Receives the number of nucleotides that user wants to see the frequency.
my $start_coord_user = '';


#Openning the get options.
GetOptions ('h' => \$help ,'f=s' => \$infile , 'id=s' => \$ID_sequence, 'w=i' => \$window_size, 'n=i' => \$n_nucleotides, 'c=i' => \$start_coord_user) or die "Error in getting options\n";

if ($help || !($infile && $ID_sequence && $window_size && $n_nucleotides && $start_coord_user)) {die "\
$0:\
This script is able to discriminate anomalous regions in the bacterial genome.\ 

Parameters:\
-h :Shows this help.\
-f :File name of in the fasta format (Mandatory).\
-w : Window size (base pairs number - Example 10000).\
-id :Identification of the sequence (Mandatory).\
-n : Number of nucleotides that user wants to see the frequency (1 for dinucleotide, 2 for tetranucleotide or 3 for hexanucleotide).\
-c : Starting coordinate to processing.\
\n";
						       
}

system("perl ./modules/Sliding_window.pl -f $infile -w $window_size -id $ID_sequence -n $n_nucleotides -c $start_coord_user"); #Executing the module I: Sliding_window.pl. 

system("mkdir AdditionalResult_$ID_sequence"); #Creating a directory that stores the additional results generated by module I.

system("mv Region*.fasta AdditionalResult_$ID_sequence"); #Moving substings.fasta to additional results directory.

system("R CMD BATCH ./modules/Max_Ent.R"); #Executing the module II: Max_Ent.R. 

system("rm Matrix*" ); #Moving adjacency matrices to additional results directory.

system("rm Max_Ent.Rout .RData"); #Removing files.

system("perl ./modules/Editing_coord_file.pl"); #Executing the module III: Editing_coord_file.pl.

system("R CMD BATCH ./modules/Display_signature.R"); #Executing the module IV: Display_signature.R.

system("perl ./modules/Selecting_anomalous_regions.pl"); #Executing the module V: Selecting_anomalous_regions.pl.

system("mv MaxEnt_result.txt list_EM.csv AdditionalResult_$ID_sequence" ); #Moving MaxEnt_result.txt and list_EM.csv files to additional results directory.

system("rm Display_signature.Rout .RData"); #Removing files.

system("mkdir Outputs\_$ID_sequence"); #Creating a directory that stores all results generated by analysis.

system("mv Signature.pdf coordinates.txt PredictedAnomalousRegions Outputs_$ID_sequence"); #Moving the main results (Signature.pdf and coordinates.txt) to Outputs directory.

system("cp -r AdditionalResult_$ID_sequence Outputs_$ID_sequence"); #Moving additional results directory to Outputs directory.

system("rm -r AdditionalResult_$ID_sequence");
